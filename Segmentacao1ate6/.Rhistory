rm(list = ls())
setwd('C:/GD/DS/Lefort/RelevanciaEstatistica')
library(tidyverse)
library(foreign)
Bin_Got_BPI_RMDQ_DN = read.csv('indata/Bin_Got_BPI_RMDQ_DN.csv', encoding = 'UTF-8')
datacorr = Bin_Got_BPI_RMDQ_DN
datacorr[1] = NULL
# Buscar pela relevância estatística destes dados -------------------------
cross = CrossTable(datacorr$Dor_pernas, datacorr$Livrar_costas, chisq = TRUE)
rm(list = ls())
setwd('C:/GD/DS/Lefort/RelevanciaEstatistica')
library(tidyverse)
library(foreign)
Bin_Got_BPI_RMDQ_DN = read.csv('indata/Bin_Got_BPI_RMDQ_DN.csv', encoding = 'UTF-8')
datacorr = Bin_Got_BPI_RMDQ_DN
datacorr[1] = NULL
# Buscar pela relevância estatística destes dados -------------------------
cross = CrossTable(datacorr$Dor_pernas, datacorr$Livrar_costas, chisq = TRUE)
library(psych)
Bin_Got_BPI_RMDQ_DN = read.csv('indata/Bin_Got_BPI_RMDQ_DN.csv', encoding = 'UTF-8')
datacorr = Bin_Got_BPI_RMDQ_DN
datacorr[1] = NULL
# Buscar pela relevância estatística destes dados -------------------------
cross = CrossTable(datacorr$Dor_pernas, datacorr$Livrar_costas, chisq = TRUE)
library(gmodels)
Bin_Got_BPI_RMDQ_DN = read.csv('indata/Bin_Got_BPI_RMDQ_DN.csv', encoding = 'UTF-8')
datacorr = Bin_Got_BPI_RMDQ_DN
datacorr[1] = NULL
# Buscar pela relevância estatística destes dados -------------------------
cross = CrossTable(datacorr$Dor_pernas, datacorr$Livrar_costas, chisq = TRUE)
rm(list = ls())
setwd('C:/GD/DS/Lefort/Segmentacao1ate6')
library(tidyverse)
library(foreign)
data_Bin_Got_BPI_RMDQ = read.csv('indata/Bin_Got_BPI_RMDQ.csv')
data_SPSS =  read.spss('indata/Banco.sav', to.data.frame = T)
data_DN = data_SPSS[c(67:76)]
#Substituir 1 (não) por 0 e 2 (sim) por 1
data_DN = data.frame(lapply(data_DN, function(x) {gsub("Não",0,x)}))
data_DN = data.frame(lapply(data_DN, function(x) {gsub("Sim",1,x)}))
#Converter para numérico
data_DN <- mutate_all(data_DN, function(x) as.numeric(as.character(x)))
dfsum = rowSums(data_DN)
#Se todos os valores na linha estão 0, provavelmente era nulo
dumNA = function(dfin){
df = data.frame(dfin)
dfsum = rowSums(df)
for (i in 1:length(df)){
if (dfsum[i] == 0) {
df[i,] = NA
}
}
return(df)
}
data_DN = dumNA(data_DN)
Bin_Got_BPI_RMDQ_DN = data.frame(cbind(data_Bin_Got_BPI_RMDQ,data_DN))
Bin_Got_BPI_RMDQ_DN[1] = NULL
write.csv(Bin_Got_BPI_RMDQ_DN, file = 'outputdata/Bin_Got_BPI_RMDQ_DN.csv')
datacorr = Bin_Got_BPI_RMDQ_DN
# D30, Dor nas costas e Dor nas pernas com RMDQ ---------------------------
# Tabela de contingência --------------------------------------------------
library(gmodels)
datacorr = datacorr[c(9,10,20,21,41,92:101)]
freq22 = matrix(NA, nrow = length(datacorr)^2, ncol = 1)
#Matrix nome das variavei
denominador = matrix(NA, nrow = length(datacorr)^2, ncol = 1)
numerador = matrix(NA, nrow = length(datacorr)^2, ncol = 1)
qte_denom = matrix(NA, nrow = length(datacorr)^2, ncol = 2)
nums = matrix(NA, nrow = length(datacorr)^2, ncol = 4)
cont = 1
for (i in 1:length(datacorr)){
for (j in 1: length(datacorr)){
cross = CrossTable(datacorr[[j]],datacorr[[i]], format = "SAS");
freq22[cont,] = cross$prop.row[2,2]
qte_denom[cont,c(1,2)] = c(cross$t[2,1] + cross$t[2,2],cross$t[1,1] + cross$t[1,2])
denominador[cont,] = names(datacorr[j])
numerador[cont,] = names(datacorr[i])
nums[cont,c(1:4)] = c(cross$t[1,1], cross$t[1,2], cross$t[2,1], cross$t[2,2])
cont = cont + 1
}
}
crosstable = data.frame(cbind(denominador, numerador, freq22, qte_denom, nums))
names(crosstable) = c("demonimador", "numerador", "Frequência","Qtd_1_Denom", "Qtd_0_Demon",
"D0N0",'D0N1','D1N0','D1N1')
View(crosstable)
